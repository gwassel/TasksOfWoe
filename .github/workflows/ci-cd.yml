name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  # Optional: allow read access to pull requests. Use with `only-new-issues` option.
  # pull-requests: read

jobs:
  golangci:
    name: lint
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1

  test:
    runs-on: self-hosted
    needs: golangci
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Run tests
        run: go test ./...

  deploy:
    runs-on: self-hosted
    environment: production
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
    - name: deploy
      run: |
        cd $PROJECT_PATH
        make down
        git switch main
        git pull
        echo "TGBOTAPI=${{ secrets.TGBOTAPI }}" >.env
        echo "ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}" >>.env
        make upd
