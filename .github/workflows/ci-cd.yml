name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60
  test:
    runs-on: ubuntu-latest
    needs: golangci
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Run tests
        run: go test ./...

#  build-and-push:
#    runs-on: ubuntu-latest
#    needs: test
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_TOKEN }}
#
#      - name: Build and push Docker image
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          push: true
#          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/task-tracker:latest
#
#  deploy:
#    runs-on: ubuntu-latest
#    needs: build-and-push
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Install SSH key
#        uses: shimataro/ssh-key-action@v2
#        with:
#          key: ${{ secrets.SSH_PRIVATE_KEY }}
#          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
#
#      - name: Deploy to server
#        run: |
#          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
#          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/task-tracker:latest
#          docker-compose down
#          docker-compose up -d
#          EOF